@startuml
' Activity diagram with swimlanes, guards, and exception flows

skinparam activity {
  BackgroundColor White
  BorderColor Black
}
skinparam shadowing false

partition "User" as U {
  start
  :Type "pick <objectKind>" in CLI;
}

partition "CLI" as C {
  :Enqueue Command;
}

partition "Robot" as R1 {
  :Read Command;
  if (state == OFF) then (yes)
    :Reply: "Power on first";
    stop
  else (no)
  endif
  :Environment.sense();
}

partition "Environment" as E {
  :Collect sensor data;
}

partition "Robot" as R2 {
  if (objectFound) then (yes)
    if (battery < 10%) then (yes)
      :Reply: "Low battery â€“ please charge";
      stop
    else (no)
    endif
  else (no)
    :Reply: "Object not found";
    stop
  endif
}

partition "Navigation" as N {
  :planPath(targetPos);
  repeat
    :nextStep();
  repeat while (not at object)
}

partition "Robot" as R3 {
  if (no path or timeout) then (yes)
    :state = ERROR;
    :Notify: "No path to target";
    stop
  else (no)
  endif
  :state = MANIPULATING;
}

partition "Manipulator" as M {
  :pick(objectId);
  if (graspSuccess) then (yes)
  else (no)
    :state = ERROR;
    :Notify: "Grasp failed";
    stop
  endif
}

partition "MemoryStore" as MS {
  :pushAction(PICK);
}

partition "Robot" as R4 {
  :state = IDLE;
  :Ack success to CLI;
  stop
}
@enduml
